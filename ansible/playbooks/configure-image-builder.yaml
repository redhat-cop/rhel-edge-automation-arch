- name: Generate In-Memory Inventory of Image Builder VM
  hosts: localhost
  roles:
    - role: openshift-image-builder-imi

- name: Configure Image Builder VM
  hosts: image-builder
  become: yes
  tasks:
    - name: Wait for Connection
      ansible.builtin.wait_for_connection:
        timeout: 600
        sleep: 10

    - name: Call image-builder Role
      ansible.builtin.include_role:
        name: image-builder

    - name: Create Temp Directories
      ansible.builtin.file:
        path: "/tmp/rhsm/{{ item }}"
        state: directory
      become: no
      delegate_to: localhost
      loop:
        - certs
        - ca
        - conf

    - name: Pull RHSM Config File
      ansible.posix.synchronize:
        dest: /tmp/rhsm/conf/
        mode: pull
        src: /etc/rhsm/rhsm.conf

    - name: Pull RHSM Entitlements
      ansible.posix.synchronize:
        dest: /tmp/rhsm/certs/
        mode: pull
        src: /etc/pki/entitlement/

    - name: Pull RHSM Certificate Authority
      ansible.posix.synchronize:
        dest: /tmp/rhsm/ca/
        mode: pull
        src: /etc/rhsm/ca/

    - name: Find Entitlement Key
      ansible.builtin.find:
        paths: /tmp/rhsm/certs/
        use_regex: yes
        patterns:
          - "^[0-9]+-key.pem$"
      become: no
      delegate_to: localhost
      failed_when:
        - find_key.matched == 0
        - find_key.examined < 2
      register: find_key

    - name: Find Entitlement Cert
      ansible.builtin.find:
        paths: /tmp/rhsm/certs/
        use_regex: yes
        patterns:
          - "^[0-9]+.pem$"
      become: no
      delegate_to: localhost
      failed_when:
        - find_cert.matched == 0
        - find_cert.examined < 2
      register: find_cert

    - name: Create Entitlement Secret
      community.kubernetes.k8s:
        api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
        ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        host: https://kubernetes.default.svc
        state: present
        definition: |
          apiVersion: v1
          data:
            "{{ find_key.files[0].path | regex_search('[0-9]+-key.pem$') }}": "{{ lookup('file', find_key.files[0].path) | b64encode }}"
            "{{ find_cert.files[0].path | regex_search('[0-9]+.pem$') }}": "{{ lookup('file', find_cert.files[0].path) | b64encode }}"
          kind: Secret
          metadata:
            name: etc-pki-entitlement
            namespace: rfe
          type: Opaque
      become: no
      delegate_to: localhost

    - name: Create RHSM CA Secret
      community.kubernetes.k8s:
        api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
        ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        host: https://kubernetes.default.svc
        state: present
        definition: |
          apiVersion: v1
          data:
            "redhat-entitlement-authority.pem": "{{ lookup('file', '/tmp/rhsm/ca/redhat-entitlement-authority.pem') | b64encode }}"
            "redhat-uep.pem": "{{ lookup('file', '/tmp/rhsm/ca/redhat-uep.pem') | b64encode }}"
          kind: Secret
          metadata:
            name: rhsm-ca
            namespace: rfe
          type: Opaque
      become: no
      delegate_to: localhost

    - name: Create RHSM Config Secret
      community.kubernetes.k8s:
        api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
        ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        host: https://kubernetes.default.svc
        state: present
        definition: |
          apiVersion: v1
          data:
            "rhsm.conf": "{{ lookup('file', '/tmp/rhsm/conf/rhsm.conf') | b64encode }}"
          kind: Secret
          metadata:
            name: rhsm-conf
            namespace: rfe
          type: Opaque
      become: no
      delegate_to: localhost
