- name: Assert Extra Variables are Defined
  ansible.builtin.assert:
    fail_msg: >
      Make sure the following extra variables are defined before running this role:
        - content_path_output_file
        - oci_image_path
        - oci_image_tag
    that:
      - content_path_output_file is defined
      - oci_image_path is defined
      - oci_image_tag is defined

- name: Set OCI Image Path Basename
  ansible.builtin.set_fact:
    oci_image_path_basename: "{{ oci_image_path | basename }}"

- name: "Check for ImageStream {{ quay_image_path_basename }}-{{ quay_image_tag }}"
  community.kubernetes.k8s_info:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: image.openshift.io/v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    kind: ImageStream
    name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}"
    namespace: rfe
    validate_certs: yes
  register: imagestream_check_results

- name: Update Image Stream
  ansible.builtin.command: >
    oc import-image -n rfe {{ oci_image_path_basename }}-{{ oci_image_tag }}
  when:
    - imagestream_check_results.resources | count > 0

- name: "Create/Update ImageStream for {{ oci_image_path_basename }}-{{ oci_image_tag }}:{{ oci_image_tag }}"
  community.kubernetes.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    resource_definition:
      apiVersion: image.openshift.io/v1
      kind: ImageStream
      metadata:
        name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}"
        namespace: rfe
      spec:
        lookupPolicy:
          local: false
        tags:
          - annotations: null
            from:
              kind: DockerImage
              name: "{{ oci_image_path }}:{{ oci_image_tag }}"
            importPolicy:
              insecure: true
            name: latest
            referencePolicy:
              type: Local
    state: present
    validate_certs: yes

- name: Set Deployment Trigger Fact
  ansible.builtin.set_fact:
    deployment_trigger: >-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "{{ oci_image_path_basename }}-{{ oci_image_tag }}:{{ oci_image_tag }}",
            "namespace": "rfe"
          },
          "fieldPath": "spec.template.spec.containers[?(@.name==\"httpd\")].image"
        }
      ]

- name: "Create/Update Deployment for {{ oci_image_path_basename }}:{{ oci_image_tag }}"
  community.kubernetes.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    resource_definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        annotations:
          image.openshift.io/triggers: "{{ deployment_trigger | to_json(separators=(',',':')) }}"
        labels:
          app: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/component: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/instance: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        namespace: rfe
      spec:
        replicas: 1
        selector:
          matchLabels:
            deployment: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        strategy: {}
        template:
          metadata:
            labels:
              deployment: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          spec:
            serviceAccountName: "{{ oci_rfe_http_service_account }}"
            containers:
              - image: " "
                name: httpd
                ports:
                  - containerPort: 8080
                    protocol: TCP
                resources:
                  requests:
                    memory: "512Mi"
                    cpu: "500m"
                  limits:
                    memory: "512Mi"
                    cpu: "500m"
    state: present
    validate_certs: yes

- name: "Create/Update Service for {{ oci_image_path_basename }}:{{ quay_image_tag }}"
  community.kubernetes.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    resource_definition:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: "{{ quay_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/component: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/instance: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        namespace: rfe
      spec:
        ports:
          - name: http-80
            port: 80
            protocol: TCP
            targetPort: 8080
          - name: http-8080
            port: 8080
            protocol: TCP
            targetPort: 8080
        selector:
          deployment: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
        sessionAffinity: None
        type: ClusterIP
    state: present
    validate_certs: yes

- name: "Create/Update Route for {{ oci_image_path_basename }}:{{ oci_image_tag }}"
  community.kubernetes.k8s:
    api_key: "{{ lookup('file', '/var/run/secrets/kubernetes.io/serviceaccount/token') }}"
    api_version: v1
    ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    host: https://kubernetes.default.svc
    resource_definition:
      kind: Route
      apiVersion: route.openshift.io/v1
      metadata:
        name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}"
        namespace: rfe
        labels:
          app: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/component: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          app.kubernetes.io/instance: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
      spec:
        to:
          kind: Service
          name: "{{ oci_image_path_basename }}-{{ oci_image_tag }}-httpd"
          weight: 100
        port:
          targetPort: http-80
        host: "{{ route_host }}"
        wildcardPolicy: None
    state: present
    validate_certs: yes
  register: stage_route

- name: Save OSTree Content Path to Output File
  ansible.builtin.copy:
    content: "http://{{ stage_route.result.spec.host }}/repo"
    dest: "{{ content_path_output_file }}"
