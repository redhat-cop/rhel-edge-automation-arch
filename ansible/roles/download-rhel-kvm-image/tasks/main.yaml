- name: Generate Access Token
  ansible.builtin.uri:
    body:
      client_id: rhsm-api
      grant_type: refresh_token
      refresh_token: "{{ lookup('file', '/var/secrets/redhat-portal-credentials/offline_token') }}"
    body_format: form-urlencoded
    method: POST
    url: "{{ redhat_sso_url }}"
  register: access_token

- name: Debug access_token
  ansible.builtin.debug:
    var: access_token
    verbosity: 1

- name: Generate Image Download URL
  ansible.builtin.uri:
    follow_redirects: none
    headers:
      Authorization: "Bearer {{ access_token.json.access_token }}"
    status_code: 307
    url: "{{ redhat_api_url }}/images/{{ image_checksum }}/download"
  register: image_url

- name: Debug image_url
  ansible.builtin.debug:
    var: image_url
    verbosity: 1

- name: Ensure Path in Document Root Exists
  ansible.builtin.file:
    path: "{{ qcow_path }}"
    state: directory

# RHEL KVM image is initially downloaded to initial_download_path and subsequently moved to
# qcow_path to prevent VM instance from installing with a partially downloaded QCOW image.

- name: Download RHEL KVM Image
  ansible.builtin.get_url:
    checksum: "sha256:{{ image_checksum }}"
    dest: "{{ initial_download_path }}/{{ image_url.json.body.filename }}"
    url: "{{ image_url.json.body.href }}"

- name: Move RHEL KVM Image to Final Destination
  ansible.builtin.command:
    argv:
      - /usr/bin/mv
      - "{{ initial_download_path | quote }}/{{ image_url.json.body.filename | quote }}"
      - "{{ qcow_path | quote }}/{{ image_url.json.body.filename | quote }}"
    creates: "{{ qcow_path }}/{{ image_url.json.body.filename }}"
    removes: "{{ initial_download_path }}/{{ image_url.json.body.filename }}"