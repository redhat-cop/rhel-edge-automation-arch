{{- range $pool := $.Values.imageBuilderPools }}
{{- range $i, $e := until ($pool.replicas | int) }}
{{- $instance_name := printf "image-builder-pool-%s-%03d" $pool.name $i }}
{{- $root_disk := printf "%s-rootdisk" $instance_name }}
---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    description: {{ $pool.description }}
  name: {{ $instance_name }}
  namespace: rfe
  labels:
    {{- include "common.labels.labels" $ | nindent 4 }}
    os.template.kubevirt.io/rhel{{ $pool.rhel.version }}: "true"
spec:
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        creationTimestamp: null
        name: {{ $root_disk }}
      spec:
        pvc:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ $pool.disk }}
          volumeMode: {{ $pool.volumeMode }}
        {{- if $pool.storageClassName }}
          storageClassName: {{ $pool.storageClassName }}
        {{- end }}
        source:
          http:
            url: "http://nexus:8081/repository/rfe-rhel-media/rhel-{{- $pool.rhel.version -}}-x86_64-kvm.qcow2"
  runStrategy: Always
  template:
    metadata:
      labels:
        app: image-builder
        pool: {{ $pool.name }}
        kubevirt.io/domain: {{ $instance_name }}
        vm.kubevirt.io/name: {{ $instance_name }}
        workload.template.kubevirt.io/server: "true"
    spec:
      domain:
        cpu:
          cores: {{ $pool.cores }}
          sockets: 1
          threads: 1
        devices:
          disks:
            - bootOrder: 1
              disk:
                bus: virtio
              name: {{ $root_disk }}
            - disk:
                bus: virtio
              name: cloudinitdisk
            - disk:
                bus: virtio
              name: redhat-portal-credentials
              serial: rhpc
            - disk:
                bus: virtio
              name: image-builder-ssh-key
              serial: ibsk
            - disk:
                bus: virtio
              name: serviceaccount
              serial: seac
          interfaces:
            - masquerade: {}
              model: virtio
              name: nic-0
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: {{ $pool.machine.type }}
        resources:
          requests:
            memory: {{ $pool.memory }}
      hostname: {{ $instance_name }}
      networks:
        - name: nic-0
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
        - dataVolume:
            name: {{ $root_disk }}
          name: {{ $root_disk }}
        - cloudInitNoCloud:
            userData: |
              #cloud-config
              name: default
              hostname: image-builder
              user: cloud-user
              bootcmd:
                - "mkdir -p /home/cloud-user/.ssh && chown -R 1000:1000 /home/cloud-user"
                - "mkdir -p /var/secrets/{redhat-portal-credentials,image-builder-ssh-key,serviceaccount}"
                - "mount -o overriderockperm,mode=0400,uid=0,gid=0 /dev/disk/by-id/virtio-rhpc /var/secrets/redhat-portal-credentials"
                - "mount -o overriderockperm,mode=0400,uid=0,gid=0 /dev/disk/by-id/virtio-ibsk /var/secrets/image-builder-ssh-key"
                - "mount -o overriderockperm,mode=0400,uid=0,gid=0 /dev/disk/by-id/virtio-seac /var/secrets/serviceaccount"
                - "cp /var/secrets/image-builder-ssh-key/ssh-publickey /home/cloud-user/.ssh/authorized_keys"
                - "chmod 644 /home/cloud-user/.ssh/authorized_keys"
          name: cloudinitdisk
        - name: redhat-portal-credentials
          secret:
            secretName: redhat-portal-credentials
        - name: image-builder-ssh-key
          secret:
            secretName: image-builder-ssh-key
        - name: serviceaccount
          serviceAccount:
            serviceAccountName: rfe-automation
{{- end }}
{{- end }}
