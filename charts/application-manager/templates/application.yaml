{{- if .Values.charts }}
{{- range $chartName, $chart := .Values.charts }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ default $chartName $chart.name }}
  namespace: {{ $chart.namespace | default $.Release.Namespace }}
spec:
  destination:
    namespace: {{ include "application-manager.destinationNamespace" (dict "chart" $chart "Values" $.Values "Release" $.Release) }}
    server: {{ $chart.server | default $.Values.common.server }}
  project: {{ $chart.project | default $.Values.common.project }}
  source:
{{- if or ($chart.parameters) ($chart.valueFiles) ($chart.values) }}
    helm:
{{- if $chart.parameters }}
      parameters:
      {{- range $val := $chart.parameters }}
        - name: {{ $val.name | quote }}
          value: {{ $val.value | quote }}
      {{- end }}
{{- end }}
{{- if $chart.valueFiles }}
      valueFiles:
      {{- range $chart.valueFiles }}
        - {{- . | toYaml | nindent 10 -}}
      {{- end }}
{{- end }}
{{- if $chart.values }}
      values: |
        {{- tpl (toYaml $chart.values) $ | nindent 8 }}
{{- end }}
{{- end }}
{{- $helmChartTypeCheck := include "application-manager.chartRepoPath" (dict "chart" $chart "Values" $.Values "Release" $.Release) }}
{{- if $helmChartTypeCheck }}
    chart: {{ $helmChartTypeCheck }}
{{- else }}
    path: {{ include "application-manager.chartPath" (dict "chart" $chart "Values" $.Values "Release" $.Release) }}
{{- end }}
    repoURL: {{ $chart.repoURL | default $.Values.common.repoURL }}
    targetRevision: {{ $chart.targetRevision | default $.Values.common.targetRevision }}
  syncPolicy:
    automated:
      prune: {{ $chart.prune | default $.Values.common.prune }}
      selfHeal: {{ $chart.selfHeal | default $.Values.common.selfHeal }}
{{- if $chart.syncOptions }}
    syncOptions: 
  {{- range $chart.syncOptions }}
      - {{ . }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}